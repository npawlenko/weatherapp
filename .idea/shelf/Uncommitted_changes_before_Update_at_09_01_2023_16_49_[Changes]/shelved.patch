Index: server/app/database/database.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/app/database/database.js b/server/app/database/database.js
new file mode 100644
--- /dev/null	(date 1671442918487)
+++ b/server/app/database/database.js	(date 1671442918487)
@@ -0,0 +1,20 @@
+const c = require("../../config/database.config");
+const {Sequelize} = require("sequelize");
+
+const db = new Sequelize(`sqlite:${c.sqlite}`);
+
+db.authenticate().then(() => {
+    console.log("Successfully connected to the database");
+}).catch((e) => {
+    console.log(`Could not connect to the database: ${e}\nPlease check your database configuration`);
+});
+
+
+
+
+
+db.sync().then(() => {
+    console.log("Database synchronized")
+}).catch((e) => {
+    console.log(`Could not synchronize database: ${e}`);
+});
\ No newline at end of file
Index: server/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/index.js b/server/index.js
new file mode 100644
--- /dev/null	(date 1671442607568)
+++ b/server/index.js	(date 1671442607568)
@@ -0,0 +1,5 @@
+const {app} = require("./app/app");
+
+const forecastRouter = require("./app/router/forecastRouter");
+
+app.use("/forecast", forecastRouter);
\ No newline at end of file
Index: server/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/package.json b/server/package.json
new file mode 100644
--- /dev/null	(date 1671442876428)
+++ b/server/package.json	(date 1671442876428)
@@ -0,0 +1,17 @@
+{
+  "name": "weatherapp-server",
+  "version": "1.0.0",
+  "dependencies": {
+    "axios": "^1.2.1",
+    "express": "^4.18.2",
+    "joi": "^17.7.0",
+    "sequelize": "^6.27.0"
+  },
+  "scripts": {
+    "start": "node index.js",
+    "dev": "nodemon index.js"
+  },
+  "devDependencies": {
+    "nodemon": "^2.0.20"
+  }
+}
Index: server/app/controller/forecastController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/app/controller/forecastController.js b/server/app/controller/forecastController.js
new file mode 100644
--- /dev/null	(date 1671443262212)
+++ b/server/app/controller/forecastController.js	(date 1671443262212)
@@ -0,0 +1,27 @@
+const Joi = require("joi");
+const axios = require("axios");
+const config = require("./../../config/app.config");
+
+exports.weather = (req, res) => {
+    const schema = Joi.object({
+        lat: Joi.number().required(),
+        lon: Joi.number().required()
+    });
+    const validation = schema.validate(req.body);
+    if(validation.error) {
+        res.status(400);
+        return res.send({
+            error: validation.error.message
+        });
+    }
+
+    const params = new URLSearchParams({
+        lat: req.body.lat,
+        lon: req.body.lon,
+        appid: config.appid
+    })
+    axios.get(`https://api.openweathermap.org/data/2.5/weather?${params.toString()}`).then((response) => {
+
+    });
+};
+
Index: server/config/app.config.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/config/app.config.js b/server/config/app.config.js
new file mode 100644
--- /dev/null	(date 1671442336816)
+++ b/server/config/app.config.js	(date 1671442336816)
@@ -0,0 +1,6 @@
+const app = {
+    port: 8080,
+    appid: "967da915da64ef5d9ec33c5e04c4efe8", // openweathermap.org API key
+};
+
+module.exports = app;
\ No newline at end of file
Index: server/app/app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/app/app.js b/server/app/app.js
new file mode 100644
--- /dev/null	(date 1671442541451)
+++ b/server/app/app.js	(date 1671442541451)
@@ -0,0 +1,18 @@
+const config = require("../config/app.config");
+const https = require("https");
+
+const express = require("express");
+const app = express();
+app.use(express.json());
+app.use(express.urlencoded({extended: false}));
+
+https
+    .createServer(app)
+    .listen(config.port, () => {
+        console.log(`Server is listening on ${config.port}`);
+    });
+
+module.exports = {
+    app: app,
+    router: express.Router()
+};
\ No newline at end of file
Index: server/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/.gitignore b/server/.gitignore
new file mode 100644
--- /dev/null	(date 1671134232471)
+++ b/server/.gitignore	(date 1671134232471)
@@ -0,0 +1,2 @@
+node_modules
+package-lock.json
\ No newline at end of file
Index: server/app/router/forecastRouter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/app/router/forecastRouter.js b/server/app/router/forecastRouter.js
new file mode 100644
--- /dev/null	(date 1671442607589)
+++ b/server/app/router/forecastRouter.js	(date 1671442607589)
@@ -0,0 +1,7 @@
+const {router} = require("../app");
+
+const forecastController = require("../controller/forecastController");
+
+router.post("/weather", forecastController.weather);
+
+module.exports = router;
\ No newline at end of file
Index: server/config/database.config.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/config/database.config.js b/server/config/database.config.js
new file mode 100644
--- /dev/null	(date 1671441198189)
+++ b/server/config/database.config.js	(date 1671441198189)
@@ -0,0 +1,5 @@
+const db = {
+
+};
+
+module.exports = db;
\ No newline at end of file
diff --git a/README.md b/README.md
new file mode 100644
